set shell := ["bash", "-c"]

venv_dir := source_dir() + "/.venv"

# Display this help message
help:
    @just --list

# Run python unittests
test:
    source {{venv_dir}}/bin/activate && python -m unittest discover -t . -s tests -vv

# Lint frontend using eslint
[private]
lint-eslint:
    cd src/frontend && yarn lint

# Lint python source files using black
[private]
lint-black:
    source {{venv_dir}}/bin/activate && black --check $(git ls-files "*.py")

# Lint python source files using pylint
[private]
lint-pylint:
    source {{venv_dir}}/bin/activate && pylint $(git ls-files "*.py")

# Lint python source files using pylint, skipping docstring checks
[private]
lint-pylint-dev:
    source {{venv_dir}}/bin/activate && pylint $(git ls-files "*.py") --disable missing-module-docstring,missing-class-docstring,missing-function-docstring,fixme

# Lint all source files
lint: lint-eslint lint-black lint-pylint

# Lint all source files, skipping docstring and TODO checks
lint-dev: lint-eslint lint-black lint-pylint-dev

# Lint and fix all source files
lint-fix:
    cd src/frontend && yarn lint:fix
    source {{venv_dir}}/bin/activate && black $(git ls-files "*.py")
    source {{venv_dir}}/bin/activate && pylint $(git ls-files "*.py")

# Run the backend server
backend-dev:
    source {{venv_dir}}/bin/activate && cd src && python -m backend

# Run the backend server on a non Raspberry Pi device
backend-dev-norpi:
    source {{venv_dir}}/bin/activate && cd src && python -m backend --no-ipc --no-camera --no-din-midi

# Run the vite frontend server
frontend-dev:
    cd src/frontend && yarn dev
